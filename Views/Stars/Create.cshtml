@model MvcMovie.Models.Star

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Star</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="MovieId" class="control-label"></label>
                <select id="movie-choices-select" asp-for="MovieId" class="form-control">
                    @if(ViewData["movies"] != null){
                        @foreach (var movie in ViewData["movies"] as IEnumerable<MvcMovie.Models.Movie>)
                            {
                                <option value=@movie.Id>@movie.Title</option>
                            }
                    }
                </select>
                <span asp-validation-for="MovieId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ActorId" class="control-label"></label>
                <select id="actor-choices-select" asp-for="ActorId" class="form-control">
                    @if(ViewData["actors"] != null){
                        @foreach (var actor in ViewData["actors"] as IEnumerable<MvcMovie.Models.Actor>)
                            {
                                <option value=@actor.Id>@actor.Name</option>
                            }
                    }
                </select>
                <span asp-validation-for="ActorId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
